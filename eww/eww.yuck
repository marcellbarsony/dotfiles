;; {{{ Variables
(defvar username "Marci")

(defpoll time :interval "1s"
              :initial "initial-value"  ; optional, defaults to poll at startup
  `date +%H:%M`
)
;; }}}

;; {{{ Bar setup
(defwidget bar []
  (centerbox :orientation "horizontal"
    (workspaces)
    (music)
    (right)
  )
)
;; }}}

;; {{{ Left
;; {{{ Workspaces [Hyprland]
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}"
            :class "workspaces-widget"
    (box :space-evenly false
      (label :text "${workspaces}${current_workspace}"
             :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id}")
          )
        )
      )
    )
  )
)
;; }}}

;; {{{ Workspaces
;; (defwidget workspaces []
;;   (box :class "workspaces"
;;        :orientation "h"
;;        :space-evenly true
;;        :halign "start"
;;        :spacing 10
;;     (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 1" 1)
;;     (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 2" 2)
;;     (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 3" 3)
;;     (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 4" 4)
;;     (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 5" 5)
;;     (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 6" 6)
;;     (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 7" 7)
;;     (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 8" 8)
;;     (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 9" 9)
;;   )
;; )
;; }}}

;; {{{ Middle
(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "${music}" : ""}))

;; (deflisten window :initial "..." "sh ~/.config/eww/scripts/get-window-title")
;; (defwidget getwindow []
;;   (box
;;     (label :text "${window}"
;;     )
;;   )
;; )
;; }}}

;; {{{ Right
(defwidget right []
  (box :class "sidestuff"
       :orientation "horizontal"
       :space-evenly false
       :halign "end"
    (greeter :text "Say hello!"
             :name "${username}"
    )
    ;; (ram :label "ram: "
    ;;         :value {EWW_RAM.used_mem_perc}
    ;;         :onchange "")
    time
  )
)

(defwidget greeter [?text name]
  (box :orientation "horizontal"
       :halign "center"
    text
    (button :onclick "notify-send 'Hello' 'Hello there, ${name}'"
      "Button" ;; Button label
    )
  )
)
;; }}}

;; {{{ Bar
(defwindow bar
  :monitor 2 ;; "primary"
  :geometry (geometry :x "0px"
                      :y "0px"
                      :width "100%"
                      :height "0px"
                      :anchor "top center"
  )
  :stacking "fg"
  :exclusive "true"
  :focusable "false"
  (bar)
)
;; }}}
