(defvar net_reveal false)

(defpoll ssid :interval "60s"
              :initial "[]"
              :run-while true
  `nmcli -t -f NAME connection show --active | head -n1 | sed 's/\"/\\"/g'`
)

(defpoll signal :interval "60s"
                :initial "[]"
                :run-while true
  `nmcli -f in-use,signal dev wifi | rg "\*" | awk '{ print $2 }'`
)

(defpoll interface :interval "60s"
                   :initial "[]"
                   :run-while true
  `ip addr | rg "state UP" | awk '{ print $2 }'`
)

(defpoll gateway :interval "60s"
                 :initial "[]"
                 :run-while true
  `ip route | rg "default via" | awk '{print $3 }'`
)

(defpoll ip :interval "60s"
            :initial "[]"
            :run-while true
  `ip addr show | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}'`
)

(defwidget network []
  (eventbox :onhover "eww update net_reveal=true"
            :onhoverlost "eww update net_reveal=false"
            :cursor "pointer"
    (box :class "network"
         :space-evenly false
         :orientation "horizontal"
         :spacing "0"
      (label :text "Ôê® ${ssid}")
      ;; (label :text "${EWW_NET[interface].down}")
      (revealer :transition "slideleft"
                :reveal net_reveal
                :duration "500ms"
        (box :class "network-reveal"
             :orientation "horizontal"
             :space-evenly false
             :halign "center"
             :spacing "5"
             :wrap false
          (label :text "${interface} ${ip}")
          (label :text "via ${gateway}")
        )
      )
    )
  )
)
